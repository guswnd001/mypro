<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<mapper namespace="mapper.CommentMapper">

	<select id="selectCommentByCondition" parameterType="hashmap" resultType="model.Comment">
		SELECT
			comment_no AS commentNo,
			user_id AS userId,
			comment_content AS commentContent,
			reg_date AS regDate
		FROM COMMENT
		<where>
			<if test="commentNo != null">
				comment_no = #{commentNo}
			</if>
		</where>
	</select>

	<sql id="BaseColumns">
		comment_no AS commentNo,
		user_id AS userId,
		comment_content AS commentContent,
		reg_date AS regDate
	</sql>
	
	<select id="selectCommentByPrimaryKey" parameterType="long" resultType="Comment">
		SELECT
			<include refid="BaseColumns"></include>
		FROM COMMENT
		WHERE comment_no = #{commentNo}
	</select>
	
	<insert id="insertComment" parameterType="Comment">
		INSERT INTO comment(comment_no, user_id, comment_content, reg_date)
		VALUES (#{commentNo}, #{userId}, #{commentContent}, #{regDate})
		<!-- getter의 이름이며, 대소문자를 구분한다. -->
	</insert>
	
	<update id="updateComment" parameterType="Comment">
		UPDATE comment SET
			comment_content = #{commentContent}
		WHERE comment_no = #{commentNo}
	</update>
	
	<update id="updateCommentIf" parameterType="Comment">
		UPDATE comment
			<set>
				<if test="commentContent != null">comment_content = #{commentContent},</if>
				<if test="regDate != null">reg_date = #{regDate}</if>
			</set>
		WHERE comment_no = #{commentNo}
	</update>
	
	<delete id="deleteComment" parameterType="long">
		DELETE FROM comment
		WHERE comment_no = #{commentNo}
	</delete>
	
	<select id="selectCommentByConditionIf" parameterType="hashMap" resultMap="baseResultMap">
		SELECT comment_no, 
			   user_id, 
			   comment_content, 
			   reg_date
		FROM comment
		<where>
			<if test="commentNo != null">
				comment_no = #{commentNo}
			</if>
			<if test="ouserId != null">
				AND user_id = #{userId}
			</if>
		</where>
	</select>
	
	<update id="updateCommentTrim" parameterType="Comment">
		UPDATE comment
			<trim prefix="SET" suffixOverrides=","> 
				<if test="commentContent != null">comment_content = #{commentContent},</if>
				<if test="regDate != null">reg_date = #{regDate}</if>
			</trim>
		WHERE comment_no = #{commentNo}
	</update>
	
	<select id="selectCommentByConditionChoose" parameterType="hashmap" resultType="Comment">
		SELECT comment_no, user_id, comment_content, reg_date
		FROM comment
		<choose>
			<when test="commentNo != null">
				WHERE comment_no = #{commentNo}
			</when>
			<when test="userId != null">
				WHERE user_id = #{userId}
			</when>
			<otherwise>
				WHERE comment_no = 1
				AND user_id = 'user1'
			</otherwise>
		</choose>
	</select>
	
	<select id="selectCommentByConditionTrim" parameterType="hashmap" resultMap="baseResultMap">
		SELECT comment_no, user_id, comment_content, reg_date
		FROM comment
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="commentNo != null">
				AND comment_no = #{commentNo}
			</if>
			<if test="userId != null">
				AND user_id = #{userId}
			</if>
		</trim>
	</select>
	
	<select id="selectCommentByConditionForeach" parameterType="hashmap" resultType="Comment">
		SELECT comment_no, user_id, comment_content, reg_date
		FROM comment
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="commentNos != null">
				comment_no IN
				<foreach collection="commentNos" 
						 item="commentNo" index="index" open="(" close=")" separator=",">
					#{commentNo}
				</foreach>
			</if>
		</trim>
	</select>
	
	<select id="selectOgnlStaticMethod" resultType="Comment">
		SELECT comment_no, user_id, comment_content, reg_date
		FROM comment
		<if test="_commentNo = @model.StaticSample@getCommentNo1()">
			WHERE comment_no = ${_commentNo}
		</if>
	</select>
	
	<select id="selectOgnlStaticField" resultType="Comment">
		SELECT comment_no, user_id, comment_content, reg_date
		FROM comment
		<if test="@model.StaticSample@commentNos != null">
			WHERE comment_no IN
			<foreach collection="@model.StaticSample@commentNos" 
					 item="commentNo" index="index" open="(" close=")" separator=",">
				${commentNo}
			</foreach>
		</if>	
	</select>
	
	<select id="selectOgnlStaticMethod2" parameterType="hashmap" resultType="Comment">
		SELECT comment_no, user_id, comment_content, reg_date
		FROM comment
		<if test="@model.StrigUtils@isNotEmpty(userId)">
			WHERE user_id = #{userId}
		</if>	
	</select>
	
</mapper>